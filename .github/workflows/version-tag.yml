name: Version Tag Management

on:
  push:
    branches:
      - main

jobs:
  version-tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for tag operations

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Extract version from VERSION.txt
        id: version
        run: |
          VERSION=$(cat VERSION.txt | tr -d '[:space:]')
          if [ -z "$VERSION" ]; then
            echo "Error: Could not read version from VERSION.txt"
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Check if version tag exists
        id: tag-check
        run: |
          if git rev-parse "v${{ steps.version.outputs.version }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Version tag v${{ steps.version.outputs.version }} already exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Version tag v${{ steps.version.outputs.version }} does not exist"
          fi

      - name: Create version tag if it doesn't exist
        if: steps.tag-check.outputs.exists == 'false'
        run: |
          git tag "v${{ steps.version.outputs.version }}"
          git push origin "v${{ steps.version.outputs.version }}"
          echo "Created and pushed version tag v${{ steps.version.outputs.version }}"

      - name: Update latest tag
        run: |
          # Delete the latest tag locally and remotely if it exists
          git tag -d latest 2>/dev/null || true
          git push origin :refs/tags/latest 2>/dev/null || true
          
          # Create new latest tag
          git tag latest
          git push origin latest
          echo "Updated latest tag to point to current commit" 